Dans ce fichier `reponses1.txt`, 

[Question 1.1] Indiquer 
- comment obtenir le ou les exécutables par compilation séparée.

On utilise les commandes suivantes : 

c99 -Wextra -pedantic -c  file.c 
c99 -Wextra -pedantic -c  test_file.c
c99 -Wextra -pedantic -c  exemple_file.c
c99  file.o test_file.o -o test_file
c99  file.o exemple_file.o -o exemple_file

- les dépendances entre les fichiers qui constituent l’application.

Les fichiers exemple_file.c et test_file.c ont une dépendance envers le module file, qui est inclus via file.h. 
Cependant, il est nécessaire d'inclure également file.c dans le programme file.c lui-même.

- le rôle de la règle `.PHONY` dans Makefile.

La règle PHONY est là pour éviter que d'autres règles ne produisent des fichiers existant cf: clean

[Question 1.5] Indiquer
- Quel est le sous-programme non-visible des autres modules et défini dans le module File.
Il n'y a qu'un sous-programme défini en static et donc non visible des autres modules, il s'agit de la fonction cellule.

- Que se passe-t-il si on enlève le mot-clé static à la compilation ?  
En enlevant la construction (compilation) static le module cellule redevient visible.

- Quel est le risque de ne pas le mettre ?
Lorsqu'on supprime le caractère "static" d'un sous-programme, on accorde à l'utilisateur la liberté de le réutiliser. 
Cependant, cela pourrait potentiellement conduire à une utilisation inappropriée des autres sous-programmes de file si la cellule est modifiée de manière incorrecte.
